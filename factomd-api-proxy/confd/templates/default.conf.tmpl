{{- $allowOrigin := getv "/allow/origin" -}}
{{- $apiPort := getv "/api/port" -}}
{{- $port := getv "/port" -}}
server {
  listen {{ $port }} default_server;
  server_name localhost;

  location = / {
    if ($request_method = GET) {
      return 200;
    }

    return 400;
  }

  location = /v2 {
    rewrite_by_lua_block {
      local function finish_request(status, message)
        ngx.status = status
        ngx.say(message)
        ngx.exit(status)
      end

      local method = ngx.req.get_method()

      if method ~= 'POST' and method ~= 'OPTIONS'
      then
        finish_request(ngx.HTTP_BAD_REQUEST, string.format('The HTTP method %q is not allowed', method))
      end

      local allow_origin = '{{ $allowOrigin }}'
      local is_wildcard_origin = allow_origin == '*'
      local origin = ngx.req.get_headers()['Origin'] or ''

      if allow_origin and (is_wildcard_origin or string.match(origin, allow_origin))
      then
        if method == 'OPTIONS'
        then
          local req_method = ngx.req.get_headers()['Access-Control-Request-Method'] or ''

          if req_method ~= 'POST'
          then
            finish_request(ngx.HTTP_OK, string.format('CORS Preflight: The requested method %q is not allowed', req_method))
          end

          ngx.header['Access-Control-Allow-Methods'] = 'POST'
          ngx.header['Access-Control-Allow-Headers'] = ngx.req.get_headers()['Access-Control-Request-Headers'] or ''
        end

        ngx.header['Access-Control-Allow-Origin'] = is_wildcard_origin and '*' or origin
        ngx.header['Access-Control-Allow-Credentials'] = tostring(not is_wildcard_origin)

        if not is_wildcard_origin
        then
          ngx.header['Varies'] = 'Origin'
        end
      end

      if method == 'OPTIONS'
      then
        finish_request(ngx.HTTP_NO_CONTENT, 'CORS preflight request')
      end
    }

    proxy_pass http://localhost:{{ $apiPort }};
  }

  location / {
    return 400;
  }
}